name: Code Coverage

on: 
  pull_request:
  push:
    branches:
      - '*'

jobs:
  Ubuntu:
    runs-on: ubuntu-22.04
    name: ubuntu-22.04
    env:
      QT_VER: 5.15.2
      QWT_VER: 6.2.0

    steps:
      - name: Get Processor Info
        run : |
          lscpu | grep name
          nproc
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Restore cached Qt
        id: cache-qt
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/Qt
          key: ${{ runner.os }}-Qt-${{ env.QT_VER }}-Cache

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VER }}
          cache: ${{ steps.cache-qt.outputs.cache-hit }}
          dir: ${{ github.workspace }}/Qt
          archives: qtbase qtsvg qttools

      - name: Install prerequisties
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends \
            libglu1-mesa-dev \
            libxcb-xinput0 \
            libxcb-xkb1 \
            libxkbcommon-x11-0 \
            libmuparser-dev \
            libgsl-dev \
            libgl2ps-dev \
            libgtest-dev \
            xvfb \
            lcov

      - name: Get GCC version
        id: gcc-version
        run:
          gcc_version=
          echo "::set-output name=gcc_version::$(gcc -dumpversion)"

      - name: Restore cached Qwt
        id: cache-qwt
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/Qwt
          key: ${{ runner.os }}-Qwt-${{ env.QWT_VER }}-Qt-${{ env.QT_VER }}-gcc-${{ steps.gcc-version.outputs.gcc_version }}

      - name: Build and install Qwt
        if: steps.cache-qwt.outputs.cache-hit != 'true'
        run: |
          wget https://downloads.sourceforge.net/qwt/qwt-${{ env.QWT_VER }}.tar.bz2
          tar -xf qwt-${{ env.QWT_VER }}.tar.bz2 && cd qwt-${{ env.QWT_VER }}
          sed -i "s|= \/usr\/local\/qwt-\$\$QWT\_VERSION|= ${GITHUB_WORKSPACE}/Qwt|g" qwtconfig.pri
          sed -i "s|QWT_CONFIG     += QwtExamples||g" qwtconfig.pri
          sed -i "s|QWT_CONFIG     += QwtPlayground||g" qwtconfig.pri
          sed -i "s|QWT_CONFIG     += QwtTests||g" qwtconfig.pri
          qmake qwt.pro
          make -j$(nproc)
          make install

      - name: Install Python packages
        run: |
          pip3 install sip pyqt5 pyqt-builder numpy

      - name: Configuring
        run: |
          mkdir build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Coverage \
            -DMAKHBER_BUILD_TESTS=ON \
            -DCMAKE_PREFIX_PATH=${GITHUB_WORKSPACE}/Qwt

      - name: Building
        run: |
          xvfb-run make -j$(nproc) -C build

      - name: Testing
        run: |
          cd build
          xvfb-run -a ctest --output-on-failure --repeat until-pass:3

      - name: Generate Coverage Report
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/gcc_64/include/*'  '*/Qwt/include/*' '*/makhber/build/*' '*/makhber/3rdparty/*' --output-file coverage.info
          lcov --list coverage.info

      - uses: codecov/codecov-action@v3

  macos:
    runs-on: macos-12
    name: macos
    env:
      QT_VER: 5.15.2
      QWT_VER: 6.2.0

    steps:
      - name: Get Processor Info
        run : |
          sysctl -n machdep.cpu.brand_string
          sysctl -n hw.logicalcpu
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install prerequisties
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
        run: |
          brew install --display-times muparser gsl gl2ps googletest lcov qwt-qt5

      - name: Configuring
        run: |
          export PATH=/usr/local/opt/qt@5/bin:$PATH
          mkdir build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Coverage \
            -DMAKHBER_BUILD_TESTS=ON \
            -DCMAKE_PREFIX_PATH=/usr/local/opt/qwt-qt5

      - name: Building
        run: |
          make -j$(sysctl -n hw.logicalcpu) -C build

      - name: Testing
        run: |
          cd build
          ctest --output-on-failure --repeat until-pass:3

      - name: Generate Coverage Report
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/clang_64/lib/*' '*/Qwt/lib/*' '*/makhber/build/*' '*/makhber/3rdparty/*' --output-file coverage.info
          lcov --list coverage.info

      - uses: codecov/codecov-action@v3
